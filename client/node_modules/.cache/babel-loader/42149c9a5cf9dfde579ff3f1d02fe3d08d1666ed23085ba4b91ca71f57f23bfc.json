{"ast":null,"code":"var _jsxFileName = \"/Users/aharpa/Desktop/Docker-and-Kubertenes-The-Final-Guide/complex/client/src/Fib.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Fib extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      seenIndexes: [],\n      values: [],\n      index: ''\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      await axios.post('api/values', {\n        index: this.state.index\n      });\n      this.setState({\n        index: ''\n      });\n    };\n  }\n  componentDidMount() {\n    this.fetchValues();\n    this.fetchIndexes();\n  }\n  async fetchValues() {\n    const values = await axios.get('/api/values/current');\n    this.setState({\n      values: values.data\n    });\n  }\n  async fetchIndexes() {\n    const seenIndexes = await axios.get('/api/values/all');\n    this.setState({\n      seenIndexes: seenIndexes.data\n    });\n  }\n  renderSeenIndexes() {\n    return this.state.seenIndexes.map(_ref => {\n      let {\n        number\n      } = _ref;\n      return number;\n    }).join(', ');\n  }\n  renderValues() {\n    const entries = [];\n    for (let key in this.state.values) {\n      entries.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"For index \", key, \" I calculated \", this.state.values[key]]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this));\n    }\n    return entries;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your index:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.index,\n          onChange: event => this.setState({\n            index: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Indexes I have seen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), this.renderSeenIndexes(), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Calculated Values:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), this.renderValues()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Fib;","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Fib","constructor","arguments","state","seenIndexes","values","index","handleSubmit","event","preventDefault","post","setState","componentDidMount","fetchValues","fetchIndexes","get","data","renderSeenIndexes","map","_ref","number","join","renderValues","entries","key","push","children","fileName","_jsxFileName","lineNumber","columnNumber","render","onSubmit","value","onChange","target"],"sources":["/Users/aharpa/Desktop/Docker-and-Kubertenes-The-Final-Guide/complex/client/src/Fib.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Fib extends Component {\n    state = {\n        seenIndexes: [],\n        values: [],\n        index: ''\n    };\n\n    componentDidMount() {\n        this.fetchValues();\n        this.fetchIndexes();\n    }\n\n    async fetchValues() {\n        const values = await axios.get('/api/values/current');\n        this.setState({values: values.data});\n    }\n\n    async fetchIndexes() {\n        const seenIndexes = await axios.get('/api/values/all');\n        this.setState({seenIndexes: seenIndexes.data});\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        await axios.post('api/values', {\n            index: this.state.index\n        });\n\n        this.setState({index: ''});\n    }\n\n    renderSeenIndexes() {\n        return this.state.seenIndexes.map(({number}) => number).join(', ');\n    }\n\n    renderValues() {\n        const entries = [];\n        for(let key in this.state.values) {\n            entries.push(\n                <div key={key}>\n                    For index {key} I calculated {this.state.values[key]}\n                </div>\n            );\n        }\n\n        return entries;\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Enter your index:</label>\n                    <input\n                        value={this.state.index}\n                        onChange={event => this.setState({index: event.target.value})}/>\n                    <button>Submit</button>\n                </form>\n\n                <h3>Indexes I have seen:</h3>\n                {this.renderSeenIndexes()}\n\n                <h3>Calculated Values:</h3>\n                {this.renderValues()}\n            </div>\n        )\n    }\n} \n\nexport default Fib;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}